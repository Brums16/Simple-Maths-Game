{"ast":null,"code":"var _jsxFileName = \"/home/chrisb/Coding/Personal Projects/simple-maths-game/src/Main.js\",\n  _s = $RefreshSig$();\nimport './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  _s();\n  const [operation, setOperation] = useState(\"\");\n  const [integer1, setInteger1] = useState(\"\");\n  const [integer2, setInteger2] = useState(\"\");\n  const [integer3, setInteger3] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [time, setTime] = useState(60);\n  const intervalRef = useRef(null);\n  const [level, setLevel] = useState(1);\n  const [lives, setLives] = useState(3);\n  function randint() {\n    return Math.floor(Math.random() * 10 ** level);\n  }\n  function randinteger1() {\n    let randinteger1 = randint();\n    console.log(randinteger1);\n    setInteger1(randinteger1);\n    return randinteger1;\n  }\n  function randinteger2() {\n    let randinteger2 = randint();\n    console.log(randinteger2);\n    setInteger2(randinteger2);\n    return randinteger2;\n  }\n  const handleChange = event => {\n    setUserAnswer(event.target.value);\n  };\n  const newGame = () => {\n    setTime(60);\n    setLives(3);\n    props.setScore(0);\n    const userInputElement = document.getElementById('userAnswer');\n    userInputElement.focus();\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    props.setIsGameOver(false);\n    randomQuestion();\n    intervalRef.current = setInterval(reduceTime, 1000);\n  };\n  function randomQuestion() {\n    let operationChance = Math.floor(Math.random() * 3);\n\n    /*This needs changing to 4 to include division, use a UseEffect or something similar */\n    let answer;\n    if (operationChance === 0) {\n      setOperation(\" + \");\n      answer = randinteger1() + randinteger2();\n    }\n    if (operationChance === 1) {\n      setOperation(\" - \");\n      answer = randinteger1() - randinteger2();\n    }\n    if (operationChance === 2) {\n      setOperation(\" x \");\n      answer = randinteger1() * randinteger2();\n    }\n    if (operationChance === 3) {\n      setOperation(\" / \");\n      answer = randinteger1() / randinteger2();\n    }\n    console.log(answer);\n    return;\n  }\n  function checkAnswer() {\n    if (userAnswer == answer) {\n      props.setScore(props.score + 1);\n      console.log(\"correct\");\n      setUserAnswer(\"\");\n      randomQuestion();\n    } else {\n      console.log(\"wrong answer\");\n      setLives(lives - 1);\n      setUserAnswer(\"\");\n      randomQuestion();\n    }\n  }\n  /*this next part is listening to see if lives falls to 0 */\n\n  useEffect(() => {\n    if (lives === 0) {\n      setLives(\"GAME OVER\");\n      props.setIsGameOver(true);\n      clearInterval(intervalRef.current);\n    }\n  }, [lives]);\n  const reduceTime = () => {\n    setTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    if (time === 0) {\n      props.setIsGameOver(true);\n      clearInterval(intervalRef.current);\n    }\n  };\n  document.onkeydown = event => {\n    if (event.key === \"Enter\") {\n      checkAnswer();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [integer1, operation, integer2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"userAnswer\",\n      name: \"userAnswer\",\n      onChange: handleChange,\n      value: userAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: checkAnswer,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Score: \", props.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time remaining: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lives: \", lives]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"FbrcXqd36hiMYEoYssElUquyL7g=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Main","props","_s","operation","setOperation","integer1","setInteger1","integer2","setInteger2","integer3","setInteger3","userAnswer","setUserAnswer","time","setTime","intervalRef","level","setLevel","lives","setLives","randint","Math","floor","random","randinteger1","console","log","randinteger2","handleChange","event","target","value","newGame","setScore","userInputElement","document","getElementById","focus","current","clearInterval","setIsGameOver","randomQuestion","setInterval","reduceTime","operationChance","answer","checkAnswer","score","prevTime","onkeydown","key","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onChange","_c","$RefreshReg$"],"sources":["/home/chrisb/Coding/Personal Projects/simple-maths-game/src/Main.js"],"sourcesContent":["import './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\n\n\n\n\n\nconst Main = (props) => {\n\nconst [operation, setOperation] = useState(\"\")\nconst [integer1, setInteger1] = useState(\"\")\nconst [integer2, setInteger2] = useState(\"\")\nconst [integer3, setInteger3] = useState(\"\")\nconst [userAnswer, setUserAnswer] = useState(\"\")\nconst [time, setTime] = useState(60)\nconst intervalRef = useRef(null)\nconst [level, setLevel] = useState(1)\nconst [lives, setLives] = useState(3)\n\n\nfunction randint() {\n    return Math.floor(Math.random()*10**(level))\n}\n\nfunction randinteger1() {\n    let randinteger1 = randint()\n    console.log(randinteger1)\n    setInteger1(randinteger1)\n    return randinteger1\n}\n\nfunction randinteger2() {\n    let randinteger2 = randint()\n    console.log(randinteger2)\n    setInteger2(randinteger2)\n    return randinteger2\n}\n\nconst handleChange = event => {\n    setUserAnswer(event.target.value)\n}\n\nconst newGame = () =>{\n    setTime(60)\n    setLives(3)\n    props.setScore(0)\n    const userInputElement = document.getElementById('userAnswer');\n    userInputElement.focus();\n    if (intervalRef.current){\n        clearInterval(intervalRef.current)\n    }\n    props.setIsGameOver(false)\n    randomQuestion()\n    intervalRef.current = setInterval(reduceTime,1000)\n    \n}\n\nfunction randomQuestion() {\n        let operationChance = (Math.floor(Math.random()*3))\n\n        /*This needs changing to 4 to include division, use a UseEffect or something similar */\n        let answer\n        if (operationChance === 0){\n            setOperation(\" + \")\n            answer = (randinteger1() + randinteger2())\n        } \n        if (operationChance === 1){\n            setOperation(\" - \")\n            answer =(randinteger1() - randinteger2())\n        }\n        if (operationChance === 2){\n            setOperation(\" x \")\n            answer = (randinteger1() * randinteger2())        }\n        if (operationChance === 3){\n            setOperation(\" / \")\n            answer = (randinteger1() / randinteger2())\n        }\n        console.log(answer)\n        return\n    }\n\nfunction checkAnswer() {\n\n    if (userAnswer == answer){\n        props.setScore(props.score+1)\n        console.log(\"correct\")\n        setUserAnswer(\"\")\n        randomQuestion()\n    } else {\n        console.log(\"wrong answer\")\n        setLives(lives-1)\n        setUserAnswer(\"\")\n        randomQuestion()\n        \n}\n}\n/*this next part is listening to see if lives falls to 0 */\n\nuseEffect(() =>{\n    if (lives === 0){\n        setLives(\"GAME OVER\")\n        props.setIsGameOver(true)\n        clearInterval(intervalRef.current)\n    }\n    }, [lives])        \n    \n\n\n\n\nconst reduceTime = () => {\n    setTime((prevTime) => (prevTime > 0 ? prevTime-1 : 0))\n    if (time === 0){\n        props.setIsGameOver(true);\n        clearInterval(intervalRef.current)\n\n    }\n}\n\n\ndocument.onkeydown = (event) => {\n    if (event.key === \"Enter\") {\n    checkAnswer()\n    }\n}\n\n    return (\n        <div className=\"main\">\n            <button onClick={newGame}>New Game</button>\n            <h2>Level: {level}</h2>\n            <h3>{integer1}{operation}{integer2}</h3>\n            <input type=\"text\" id=\"userAnswer\" name=\"userAnswer\" onChange={handleChange} value={userAnswer}/>\n            <button type=\"submit\" onClick={checkAnswer}>Submit</button>\n            <h4>Score: {props.score}</h4>\n            <h2>Time remaining: {time}</h2>\n            <h2>Lives: {lives}</h2>\n            \n            \n        </div>\n    )\n}\n\nexport default Main\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}